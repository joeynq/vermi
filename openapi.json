{
	"openapi": "3.1.0",
	"info": { "title": "Vermi API", "version": "1.0.0" },
	"components": {
		"securitySchemes": {
			"BearerAuth": {
				"type": "http",
				"bearerFormat": "JWT",
				"scheme": "bearer",
				"description": "A bearer token in the format of a JWS and conformato to the specifications included in RFC8725."
			}
		},
		"headers": {
			"Access-Control-Allow-Origin": {
				"description": "Indicates whether the response can be shared with requesting code from the given origin.",
				"schema": {
					"type": "string",
					"maxLength": 255,
					"minLength": 1,
					"pattern": "^(\\*|[a-zA-Z0-9]+)$"
				}
			},
			"X-RateLimit-Limit": {
				"description": "The maximum number of requests that the consumer is permitted to make in a given period.",
				"schema": {
					"type": "integer",
					"format": "int32",
					"minimum": 1,
					"maximum": 10000
				}
			},
			"X-RateLimit-Remaining": {
				"description": "The number of requests remaining in the current rate limit window.",
				"schema": {
					"type": "integer",
					"format": "int32",
					"minimum": 0,
					"maximum": 10000
				}
			},
			"X-RateLimit-Reset": {
				"description": "The time at which the current rate limit window resets in UTC epoch seconds.",
				"schema": {
					"type": "integer",
					"format": "int32",
					"minimum": 0,
					"maximum": 9999999999999
				}
			},
			"Retry-After": {
				"description": "The number of seconds until the consumer can make another request.",
				"schema": {
					"type": "integer",
					"format": "int32",
					"minimum": 0,
					"maximum": 9999999999999
				}
			}
		},
		"schemas": {
			"Paging": {
				"additionalProperties": false,
				"type": "object",
				"properties": {
					"page": {
						"format": "int32",
						"type": "integer",
						"minimum": 0,
						"maximum": 9999,
						"default": 0,
						"description": "Page number."
					},
					"size": {
						"format": "int32",
						"type": "integer",
						"minimum": 1,
						"maximum": 100,
						"default": 20,
						"description": "Number of objects per page."
					},
					"offset": {
						"format": "int32",
						"type": "integer",
						"minimum": 0,
						"maximum": 999999,
						"readOnly": true,
						"description": "Number of objects to skip."
					},
					"limit": {
						"format": "int32",
						"type": "integer",
						"minimum": 1,
						"maximum": 100,
						"readOnly": true,
						"description": "Maximum number of objects to return.",
						"default": 20
					}
				},
				"required": ["page", "size", "offset", "limit"]
			},
			"Sort": {
				"additionalProperties": false,
				"type": "object",
				"properties": {
					"prop": {
						"type": "string",
						"maxLength": 255,
						"minLength": 1,
						"pattern": "^[a-zA-Z0-9_]+$"
					},
					"direction": {
						"enum": ["asc", "desc"],
						"default": "asc",
						"maxLength": 4,
						"minLength": 3,
						"type": "string"
					}
				},
				"required": ["prop", "direction"]
			},
			"User": {
				"additionalProperties": false,
				"type": "object",
				"properties": {
					"id": {
						"type": "string",
						"maxLength": 36,
						"minLength": 36,
						"format": "uuid"
					},
					"first_name": { "type": "string", "maxLength": 255, "minLength": 1 },
					"last_name": { "type": "string", "maxLength": 255, "minLength": 1 },
					"email": {
						"type": "string",
						"maxLength": 320,
						"minLength": 6,
						"format": "email"
					}
				},
				"required": ["id", "first_name", "last_name", "email"]
			},
			"UserFilter": {
				"additionalProperties": false,
				"type": "object",
				"properties": {
					"first_name": {
						"type": "string",
						"maxLength": 1024,
						"minLength": 1,
						"description": "First name"
					},
					"last_name": {
						"type": "string",
						"maxLength": 1024,
						"minLength": 1,
						"description": "Last name"
					}
				},
				"description": "Filter options"
			},
			"SearchParams": {
				"additionalProperties": false,
				"type": "object",
				"properties": {
					"paging": { "$ref": "#/components/schemas/Paging" },
					"sort": { "$ref": "#/components/schemas/Sort" }
				}
			},
			"UserSearch": {
				"additionalProperties": false,
				"type": "object",
				"properties": {
					"paging": { "$ref": "#/components/schemas/Paging" },
					"sort": { "$ref": "#/components/schemas/Sort" },
					"filter": { "$ref": "#/components/schemas/UserFilter" }
				}
			},
			"SingleOfUser": {
				"type": "object",
				"properties": { "data": { "$ref": "#/components/schemas/User" } },
				"required": ["data"]
			},
			"PaginationOfUser": {
				"type": "object",
				"properties": {
					"data": {
						"maxItems": 100,
						"minItems": 0,
						"type": "array",
						"items": {
							"additionalProperties": false,
							"type": "object",
							"properties": {
								"id": {
									"type": "string",
									"maxLength": 36,
									"minLength": 36,
									"format": "uuid"
								},
								"first_name": {
									"type": "string",
									"maxLength": 255,
									"minLength": 1
								},
								"last_name": {
									"type": "string",
									"maxLength": 255,
									"minLength": 1
								},
								"email": {
									"type": "string",
									"maxLength": 320,
									"minLength": 6,
									"format": "email"
								}
							},
							"required": ["id", "first_name", "last_name", "email"]
						}
					},
					"total": {
						"format": "int32",
						"type": "integer",
						"minimum": 0,
						"maximum": 999999
					},
					"page": {
						"format": "int32",
						"type": "integer",
						"minimum": 1,
						"maximum": 9999
					},
					"limit": {
						"format": "int32",
						"type": "integer",
						"minimum": 1,
						"maximum": 100
					}
				},
				"required": ["data", "total", "page", "limit"]
			},
			"Exception": {
				"type": "object",
				"properties": {
					"status": {
						"minimum": 400,
						"maximum": 599,
						"format": "int32",
						"type": "integer"
					},
					"message": { "maxLength": 1024, "minLength": 1, "type": "string" },
					"code": {
						"maxLength": 64,
						"minLength": 3,
						"pattern": "^[a-zA-Z0-9_:]+$",
						"type": "string"
					},
					"trace": { "maxLength": 1024, "minLength": 1, "type": "string" },
					"errors": {
						"maxItems": 100,
						"minItems": 0,
						"type": "array",
						"items": {
							"type": "object",
							"properties": {
								"code": {
									"enum": [
										"array_contains",
										"array_max_contains",
										"array_max_items",
										"array_min_contains",
										"array_min_items",
										"array_unique_items",
										"array",
										"async_iterator",
										"big_int_exclusive_maximum",
										"big_int_exclusive_minimum",
										"big_int_maximum",
										"big_int_minimum",
										"big_int_multiple_of",
										"big_int",
										"boolean",
										"date_exclusive_maximum_timestamp",
										"date_exclusive_minimum_timestamp",
										"date_maximum_timestamp",
										"date_minimum_timestamp",
										"date_multiple_of_timestamp",
										"date",
										"function",
										"integer_exclusive_maximum",
										"integer_exclusive_minimum",
										"integer_maximum",
										"integer_minimum",
										"integer_multiple_of",
										"integer",
										"intersect_unevaluated_properties",
										"intersect",
										"iterator",
										"kind",
										"literal",
										"never",
										"not",
										"null",
										"number_exclusive_maximum",
										"number_exclusive_minimum",
										"number_maximum",
										"number_minimum",
										"number_multiple_of",
										"number",
										"object_additional_properties",
										"object_max_properties",
										"object_min_properties",
										"object_required_property",
										"object",
										"promise",
										"reg_exp",
										"string_format_unknown",
										"string_format",
										"string_max_length",
										"string_min_length",
										"string_pattern",
										"string",
										"symbol",
										"tuple_length",
										"tuple",
										"uint8_array_max_byte_length",
										"uint8_array_min_byte_length",
										"uint8_array",
										"undefined",
										"union",
										"void"
									],
									"maxLength": 32,
									"minLength": 3,
									"type": "string"
								},
								"path": {
									"maxLength": 1024,
									"minLength": 2,
									"pattern": "^/[^/]+(/[^/]+)*$",
									"type": "string"
								},
								"message": {
									"maxLength": 1024,
									"minLength": 1,
									"type": "string"
								}
							},
							"required": ["code", "path", "message"]
						}
					}
				},
				"required": ["status", "message", "code"]
			}
		},
		"responses": {
			"RouterException": {
				"description": "Client Error",
				"headers": {
					"X-RateLimit-Limit": {
						"$ref": "#/components/headers/X-RateLimit-Limit"
					},
					"X-RateLimit-Remaining": {
						"$ref": "#/components/headers/X-RateLimit-Remaining"
					},
					"X-RateLimit-Reset": {
						"$ref": "#/components/headers/X-RateLimit-Reset"
					},
					"Retry-After": { "$ref": "#/components/headers/Retry-After" },
					"Access-Control-Allow-Origin": {
						"$ref": "#/components/headers/Access-Control-Allow-Origin"
					}
				},
				"content": {
					"application/json": {
						"schema": { "$ref": "#/components/schemas/Exception" }
					}
				}
			}
		}
	},
	"paths": {
		"/api/users/{user_id}": {
			"get": {
				"operationId": "get_user",
				"responses": {
					"200": {
						"description": "HTTP 200 Response",
						"headers": {
							"X-RateLimit-Limit": {
								"$ref": "#/components/headers/X-RateLimit-Limit"
							},
							"X-RateLimit-Remaining": {
								"$ref": "#/components/headers/X-RateLimit-Remaining"
							},
							"X-RateLimit-Reset": {
								"$ref": "#/components/headers/X-RateLimit-Reset"
							},
							"Retry-After": { "$ref": "#/components/headers/Retry-After" },
							"Access-Control-Allow-Origin": {
								"$ref": "#/components/headers/Access-Control-Allow-Origin"
							}
						},
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/SingleOfUser" }
							}
						}
					},
					"401": {
						"description": "HTTP 401 Response",
						"headers": {
							"X-RateLimit-Limit": {
								"$ref": "#/components/headers/X-RateLimit-Limit"
							},
							"X-RateLimit-Remaining": {
								"$ref": "#/components/headers/X-RateLimit-Remaining"
							},
							"X-RateLimit-Reset": {
								"$ref": "#/components/headers/X-RateLimit-Reset"
							},
							"Retry-After": { "$ref": "#/components/headers/Retry-After" },
							"Access-Control-Allow-Origin": {
								"$ref": "#/components/headers/Access-Control-Allow-Origin"
							}
						},
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Exception" }
							}
						}
					},
					"429": { "$ref": "#/components/responses/RouterException" },
					"500": { "$ref": "#/components/responses/RouterException" },
					"4XX": { "$ref": "#/components/responses/RouterException" }
				},
				"summary": "GET /api/users/{user_id}",
				"security": [{ "BearerAuth": [] }]
			},
			"parameters": [
				{
					"name": "user_id",
					"in": "path",
					"required": true,
					"schema": {
						"minLength": 1,
						"maxLength": 255,
						"pattern": "^[a-zA-Z0-9-_]+$",
						"type": "string"
					}
				}
			],
			"put": {
				"operationId": "replace_user",
				"responses": {
					"200": {
						"description": "HTTP 200 Response",
						"headers": {
							"X-RateLimit-Limit": {
								"$ref": "#/components/headers/X-RateLimit-Limit"
							},
							"X-RateLimit-Remaining": {
								"$ref": "#/components/headers/X-RateLimit-Remaining"
							},
							"X-RateLimit-Reset": {
								"$ref": "#/components/headers/X-RateLimit-Reset"
							},
							"Retry-After": { "$ref": "#/components/headers/Retry-After" },
							"Access-Control-Allow-Origin": {
								"$ref": "#/components/headers/Access-Control-Allow-Origin"
							}
						},
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/SingleOfUser" }
							}
						}
					},
					"401": {
						"description": "HTTP 401 Response",
						"headers": {
							"X-RateLimit-Limit": {
								"$ref": "#/components/headers/X-RateLimit-Limit"
							},
							"X-RateLimit-Remaining": {
								"$ref": "#/components/headers/X-RateLimit-Remaining"
							},
							"X-RateLimit-Reset": {
								"$ref": "#/components/headers/X-RateLimit-Reset"
							},
							"Retry-After": { "$ref": "#/components/headers/Retry-After" },
							"Access-Control-Allow-Origin": {
								"$ref": "#/components/headers/Access-Control-Allow-Origin"
							}
						},
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Exception" }
							}
						}
					},
					"429": { "$ref": "#/components/responses/RouterException" },
					"500": { "$ref": "#/components/responses/RouterException" },
					"4XX": { "$ref": "#/components/responses/RouterException" }
				},
				"summary": "PUT /api/users/{user_id}",
				"security": [{ "BearerAuth": [] }]
			},
			"delete": {
				"operationId": "delete_user",
				"responses": {
					"204": {
						"description": "HTTP 204 Response",
						"headers": {
							"X-RateLimit-Limit": {
								"$ref": "#/components/headers/X-RateLimit-Limit"
							},
							"X-RateLimit-Remaining": {
								"$ref": "#/components/headers/X-RateLimit-Remaining"
							},
							"X-RateLimit-Reset": {
								"$ref": "#/components/headers/X-RateLimit-Reset"
							},
							"Retry-After": { "$ref": "#/components/headers/Retry-After" },
							"Access-Control-Allow-Origin": {
								"$ref": "#/components/headers/Access-Control-Allow-Origin"
							}
						}
					},
					"401": {
						"description": "HTTP 401 Response",
						"headers": {
							"X-RateLimit-Limit": {
								"$ref": "#/components/headers/X-RateLimit-Limit"
							},
							"X-RateLimit-Remaining": {
								"$ref": "#/components/headers/X-RateLimit-Remaining"
							},
							"X-RateLimit-Reset": {
								"$ref": "#/components/headers/X-RateLimit-Reset"
							},
							"Retry-After": { "$ref": "#/components/headers/Retry-After" },
							"Access-Control-Allow-Origin": {
								"$ref": "#/components/headers/Access-Control-Allow-Origin"
							}
						},
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Exception" }
							}
						}
					},
					"429": { "$ref": "#/components/responses/RouterException" },
					"500": { "$ref": "#/components/responses/RouterException" },
					"4XX": { "$ref": "#/components/responses/RouterException" }
				},
				"summary": "DELETE /api/users/{user_id}",
				"security": [{ "BearerAuth": [] }]
			}
		},
		"/api/users": {
			"get": {
				"operationId": "list_users",
				"responses": {
					"200": {
						"description": "HTTP 200 Response",
						"headers": {
							"X-RateLimit-Limit": {
								"$ref": "#/components/headers/X-RateLimit-Limit"
							},
							"X-RateLimit-Remaining": {
								"$ref": "#/components/headers/X-RateLimit-Remaining"
							},
							"X-RateLimit-Reset": {
								"$ref": "#/components/headers/X-RateLimit-Reset"
							},
							"Retry-After": { "$ref": "#/components/headers/Retry-After" },
							"Access-Control-Allow-Origin": {
								"$ref": "#/components/headers/Access-Control-Allow-Origin"
							}
						},
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/PaginationOfUser" }
							}
						}
					},
					"401": {
						"description": "HTTP 401 Response",
						"headers": {
							"X-RateLimit-Limit": {
								"$ref": "#/components/headers/X-RateLimit-Limit"
							},
							"X-RateLimit-Remaining": {
								"$ref": "#/components/headers/X-RateLimit-Remaining"
							},
							"X-RateLimit-Reset": {
								"$ref": "#/components/headers/X-RateLimit-Reset"
							},
							"Retry-After": { "$ref": "#/components/headers/Retry-After" },
							"Access-Control-Allow-Origin": {
								"$ref": "#/components/headers/Access-Control-Allow-Origin"
							}
						},
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Exception" }
							}
						}
					},
					"429": { "$ref": "#/components/responses/RouterException" },
					"500": { "$ref": "#/components/responses/RouterException" },
					"4XX": { "$ref": "#/components/responses/RouterException" }
				},
				"summary": "GET /api/users",
				"parameters": [
					{
						"name": "paging",
						"in": "query",
						"schema": { "$ref": "#/components/schemas/Paging" }
					},
					{
						"name": "sort",
						"in": "query",
						"schema": { "$ref": "#/components/schemas/Sort" }
					},
					{
						"name": "filter",
						"in": "query",
						"schema": { "$ref": "#/components/schemas/UserFilter" }
					}
				]
			},
			"parameters": [],
			"post": {
				"operationId": "create_userdto",
				"responses": {
					"201": {
						"description": "HTTP 201 Response",
						"headers": {
							"X-RateLimit-Limit": {
								"$ref": "#/components/headers/X-RateLimit-Limit"
							},
							"X-RateLimit-Remaining": {
								"$ref": "#/components/headers/X-RateLimit-Remaining"
							},
							"X-RateLimit-Reset": {
								"$ref": "#/components/headers/X-RateLimit-Reset"
							},
							"Retry-After": { "$ref": "#/components/headers/Retry-After" },
							"Access-Control-Allow-Origin": {
								"$ref": "#/components/headers/Access-Control-Allow-Origin"
							}
						},
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/SingleOfUser" }
							}
						}
					},
					"401": {
						"description": "HTTP 401 Response",
						"headers": {
							"X-RateLimit-Limit": {
								"$ref": "#/components/headers/X-RateLimit-Limit"
							},
							"X-RateLimit-Remaining": {
								"$ref": "#/components/headers/X-RateLimit-Remaining"
							},
							"X-RateLimit-Reset": {
								"$ref": "#/components/headers/X-RateLimit-Reset"
							},
							"Retry-After": { "$ref": "#/components/headers/Retry-After" },
							"Access-Control-Allow-Origin": {
								"$ref": "#/components/headers/Access-Control-Allow-Origin"
							}
						},
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Exception" }
							}
						}
					},
					"429": { "$ref": "#/components/responses/RouterException" },
					"500": { "$ref": "#/components/responses/RouterException" },
					"4XX": { "$ref": "#/components/responses/RouterException" }
				},
				"summary": "POST /api/users",
				"security": [{ "BearerAuth": [] }]
			}
		}
	},
	"security": [{ "BearerAuth": [] }],
	"servers": [{ "url": "http://localhost:3000", "x-internal": true }]
}
