{
	"openapi": "3.1.0",
	"info": {
		"title": "Vermi API",
		"version": "1.0.0",
		"license": { "name": "MIT", "url": "https://opensource.org/licenses/MIT" }
	},
	"components": {
		"securitySchemes": {
			"BearerAuth": {
				"type": "http",
				"bearerFormat": "JWT",
				"scheme": "bearer"
			}
		},
		"schemas": {
			"Paging": {
				"type": "object",
				"properties": {
					"page": {
						"format": "int32",
						"type": "integer",
						"minimum": 0,
						"default": 0,
						"description": "Page number."
					},
					"size": {
						"format": "int32",
						"type": "integer",
						"minimum": 1,
						"default": 20,
						"description": "Number of objects per page."
					},
					"offset": {
						"format": "int32",
						"type": "integer",
						"readOnly": true,
						"description": "Number of objects to skip."
					},
					"limit": {
						"format": "int32",
						"type": "integer",
						"readOnly": true,
						"description": "Maximum number of objects to return."
					}
				},
				"required": ["page", "size", "offset", "limit"]
			},
			"Sort": {
				"type": "object",
				"properties": {
					"prop": { "type": "string" },
					"direction": {
						"type": "string",
						"enum": ["asc", "desc"],
						"default": "asc"
					}
				},
				"required": ["prop", "direction"]
			},
			"UserDto": {
				"type": "object",
				"properties": {
					"id": { "format": "int32", "type": "integer" },
					"name": { "type": "string" },
					"email": { "type": "string" }
				},
				"required": ["id", "name", "email"]
			},
			"BadRequest": {
				"type": "object",
				"properties": {
					"status": { "default": 400, "type": "number" },
					"message": { "default": "", "type": "string" },
					"errors": {
						"type": "array",
						"items": {
							"type": "object",
							"properties": {
								"message": { "type": "string" },
								"path": { "type": "string" },
								"type": {
									"type": "number",
									"enum": [
										0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,
										17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
										32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46,
										47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
										62, 63
									]
								},
								"value": {}
							},
							"required": ["message", "path", "type", "value"]
						}
					}
				},
				"required": ["status", "message", "errors"]
			},
			"Conflict": {
				"type": "object",
				"properties": {
					"status": { "default": 409, "type": "number" },
					"message": { "default": "", "type": "string" }
				},
				"required": ["status", "message"]
			},
			"NotFound": {
				"type": "object",
				"properties": {
					"status": { "default": 404, "type": "number" },
					"message": { "default": "", "type": "string" }
				},
				"required": ["status", "message"]
			},
			"Unauthorized": {
				"type": "object",
				"properties": {
					"status": { "default": 401, "type": "number" },
					"message": { "default": "", "type": "string" }
				},
				"required": ["status", "message"]
			}
		}
	},
	"paths": {
		"/api/users/{user_id}": {
			"get": {
				"operationId": "UserGetUser",
				"responses": {
					"200": {
						"description": "HTTP 200 Response",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"data": { "$ref": "#/components/schemas/UserDto" }
									},
									"required": ["data"]
								}
							}
						}
					},
					"400": {
						"description": "HTTP 400 Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/BadRequest" }
							}
						}
					},
					"401": {
						"description": "HTTP 401 Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Unauthorized" }
							}
						}
					},
					"403": {
						"description": "HTTP 403 Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/BadRequest" }
							}
						}
					},
					"404": {
						"description": "HTTP 404 Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/NotFound" }
							}
						}
					}
				},
				"summary": "GET /api/users/{user_id}",
				"parameters": [
					{
						"name": "user_id",
						"in": "path",
						"required": true,
						"schema": { "type": "string" }
					}
				],
				"security": [{ "BearerAuth": [] }]
			},
			"put": {
				"operationId": "UserUpdateUser",
				"responses": {
					"200": {
						"description": "HTTP 200 Response",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"data": { "$ref": "#/components/schemas/UserDto" }
									},
									"required": ["data"]
								}
							}
						}
					},
					"400": {
						"description": "HTTP 400 Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/BadRequest" }
							}
						}
					},
					"404": {
						"description": "HTTP 404 Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/NotFound" }
							}
						}
					}
				},
				"summary": "PUT /api/users/{user_id}",
				"parameters": [
					{
						"name": "user_id",
						"in": "path",
						"required": true,
						"schema": { "type": "string" }
					}
				]
			},
			"delete": {
				"operationId": "UserDeleteUser",
				"responses": {
					"204": {
						"description": "HTTP 204 Response",
						"content": { "application/json": {} }
					},
					"400": {
						"description": "HTTP 400 Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/BadRequest" }
							}
						}
					},
					"404": {
						"description": "HTTP 404 Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/NotFound" }
							}
						}
					}
				},
				"summary": "DELETE /api/users/{user_id}",
				"parameters": [
					{
						"name": "user_id",
						"in": "path",
						"required": true,
						"schema": { "type": "string" }
					}
				]
			}
		},
		"/api/users": {
			"get": {
				"operationId": "UserGetUsers",
				"responses": {
					"200": {
						"description": "HTTP 200 Response",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": { "$ref": "#/components/schemas/UserDto" }
										},
										"total": {
											"format": "int32",
											"type": "integer",
											"minimum": 0
										},
										"page": {
											"format": "int32",
											"type": "integer",
											"minimum": 1
										},
										"limit": {
											"format": "int32",
											"type": "integer",
											"minimum": 1
										}
									},
									"required": ["data", "total", "page", "limit"]
								}
							}
						}
					},
					"400": {
						"description": "HTTP 400 Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/BadRequest" }
							}
						}
					},
					"404": {
						"description": "HTTP 404 Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/NotFound" }
							}
						}
					}
				},
				"summary": "GET /api/users",
				"parameters": [
					{
						"name": "paging",
						"in": "query",
						"schema": { "$ref": "#/components/schemas/Paging" }
					},
					{
						"name": "sort",
						"in": "query",
						"schema": { "$ref": "#/components/schemas/Sort" }
					},
					{
						"name": "filter",
						"in": "query",
						"schema": { "$ref": "#/components/schemas/UserDto" }
					}
				]
			},
			"post": {
				"operationId": "UserCreateUser",
				"responses": {
					"201": {
						"description": "HTTP 201 Response",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"data": { "$ref": "#/components/schemas/UserDto" }
									},
									"required": ["data"]
								}
							}
						}
					},
					"400": {
						"description": "HTTP 400 Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/BadRequest" }
							}
						}
					},
					"409": {
						"description": "HTTP 409 Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Conflict" }
							}
						}
					}
				},
				"summary": "POST /api/users",
				"parameters": []
			}
		}
	},
	"security": [{ "BearerAuth": [] }],
	"servers": [{ "url": "http://localhost:3000" }]
}
